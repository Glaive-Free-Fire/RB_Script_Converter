import re

def process_single_entry(entry_str):
    """
    Обрабатывает одну запись с данными.
    """
    entry_str = entry_str.strip()
    if not entry_str:
        return ""
    
    # Получаем первую непустую строку для номера и заголовка
    lines = [line.strip() for line in entry_str.splitlines() if line.strip()]
    if not lines:
        return "Неверный формат входных данных"
    first_line = lines[0]
    try:
        number, rest = first_line.split("=>", 1)
    except ValueError:
        return "Неверный формат первой строки, ожидается наличие '=>'"
    number = number.strip()
    title = rest.strip()
    
    # Находим начало содержимого списков
    start = entry_str.find("[[")
    if start == -1:
        return "Неверный формат входных данных: отсутствует [["
    
    # Пытаемся найти закрывающую последовательность "]]"
    end = entry_str.find("]]", start)
    if end == -1:
        # Если закрывающих скобок нет, берем содержимое до конца записи
        lists_str = entry_str[start+2:].strip()
    else:
        lists_str = entry_str[start+2:end].strip()
    
    # Если разделитель между списками "]," найден, считаем, что присутствуют два списка.
    if "]," in lists_str:
        list_parts = re.split(r'\],\s*\[', lists_str, maxsplit=1)
        if len(list_parts) != 2:
            return "Неверный формат списков"
        list1_str, list2_str = list_parts
    else:
        # Иначе, считаем, что в данных присутствует только один список.
        list1_str = lists_str
        list2_str = ""
    
    # Убираем лишние завершающие символы у второго списка, если они есть
    list2_str = re.sub(r'[\]\s,]*$', '', list2_str)
    
    # Извлекаем строки внутри кавычек для первого списка (описание)
    list1 = re.findall(r'"(.*?)"', list1_str)
    description = ''.join(list1)
    
    # Извлекаем строки для второго списка (если присутствуют)
    list2 = re.findall(r'"(.*?)"', list2_str)
    
    # Формируем итоговый вывод
    output = f"{number} {title}\n{description}\n\n"
    for item in list2:
        if item.strip():
            output += item + '\n'
    return output

def process_data(input_str):
    """
    Обрабатывает входную строку, содержащую несколько записей.
    Каждая запись определяется шаблоном 'Номер => # Заголовок' и продолжается до следующей записи.
    """
    # Используем регулярное выражение для поиска всех записей.
    pattern = r'(\d+\s*=>\s*#.*?)(?=\n\s*\d+\s*=>\s*#|\Z)'
    entries = re.findall(pattern, input_str, re.DOTALL)
    results = []
    for entry in entries:
        res = process_single_entry(entry)
        results.append(res)
    return "\n\n".join(results)

# Пример использования с данными нового типа (только один список)
input_data = """
test
"""

print(process_data(input_data))
