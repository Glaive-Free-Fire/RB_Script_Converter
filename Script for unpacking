import re

def process_single_entry(entry_str):
    """
    Обрабатывает одну запись с данными.
    """
    entry_str = entry_str.strip()
    if not entry_str:
        return ""
    
    # Получаем первую непустую строку для номера и заголовка
    lines = [line.strip() for line in entry_str.splitlines() if line.strip()]
    if not lines:
        return "Неверный формат входных данных"
    first_line = lines[0]
    try:
        number, rest = first_line.split("=>", 1)
    except ValueError:
        return "Неверный формат первой строки, ожидается наличие '=>'"
    number = number.strip()
    title = rest.strip()
    
    # Используем регулярное выражение для извлечения содержимого двух списков.
    # Группа 'list1' захватывает содержимое первого списка,
    # группа 'list2' — содержимое второго списка (до конца строки, даже если закрывающая скобка отсутствует).
    m = re.search(r'\[\[\s*(?P<list1>.*?)\s*\],\s*\[\s*(?P<list2>.*)', entry_str, re.DOTALL)
    if not m:
        return "Неверный формат списков"
    list1_str = m.group('list1')
    list2_str = m.group('list2')
    # Удаляем любые завершающие символы (скобки, запятые, пробелы) у второго списка
    list2_str = re.sub(r'[\]\s,]*$', '', list2_str)
    
    # Извлекаем строки внутри кавычек
    list1 = re.findall(r'"(.*?)"', list1_str)
    description = ''.join(list1)
    list2 = re.findall(r'"(.*?)"', list2_str)
    
    # Формируем выходную строку
    output = f"{number} {title}\n{description}\n\n"
    for item in list2:
        if item.strip():
            output += item + '\n'
    return output

def process_data(input_str):
    """
    Обрабатывает входную строку, содержащую несколько записей.
    Каждая запись определяется шаблоном 'Номер => # Заголовок' и продолжается до следующей записи.
    """
    # Используем регулярное выражение для поиска всех записей.
    # Каждая запись начинается с цифры, за которой следует "=> #", и продолжается до следующей такой строки или конца текста.
    pattern = r'(\d+\s*=>\s*#.*?)(?=\n\s*\d+\s*=>\s*#|\Z)'
    entries = re.findall(pattern, input_str, re.DOTALL)
    results = []
    for entry in entries:
        res = process_single_entry(entry)
        results.append(res)
    return "\n\n".join(results)

# Пример использования с очередью записей
input_data = """
357 => # 魔導キメラ
      [[
        "妖魔の遺伝子を加え、魔力を主眼に造られたキメラ",
        "その施術により、強大な魔力を与えられている",
        "人造精霊の召喚機能も備わり、戦闘能力は高い",
        "魔力以外の能力も低くなく、肉弾戦にも対応可能",
      ],
      [
        "装備防具：胸当て　甲羅　ローブ　薄着　帽子　兜",
        "　　　　　魔帽　軽盾　盾",
        "スキル：白魔法　黒魔法　召喚　魔技　造技",
        "　　　　ブレス",
        "アビリティ：なし",
        "",
      ]],
    358 => # フォースミュータント
      [[
        "さらに魔力を高めた最上位の魔導キメラ",
        "生きた魔導炉と言えるほどの出力を発揮する",
        "人造精霊を召喚するほか、特殊電磁場を構成可能",
        "また、聖エネルギーを凝縮したブレスを使用できる",
      ],
      [
        "装備防具：胸当て　甲羅　ローブ　薄着　帽子　兜",
        "　　　　　魔帽　軽盾　盾",
        "スキル：白魔法　黒魔法　召喚　魔技　造技",
        "　　　　ブレス",
        "アビリティ：なし",
"""
print(process_data(input_data))
